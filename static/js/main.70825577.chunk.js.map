{"version":3,"sources":["assets/Logo/reactLogo2.png","components/data.js","components/screens/Counter/counter1.js","components/screens/Counter/index.js","components/screens/Form/index.js","components/screens/Menu/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","data","Alumno","_id","name","year","counter","props","className","created","updated","onClick","decrement","value","increment","deleteCounter","Counter","id","event","index","state","counters","findIndex","Object","assign","Date","setState","splice","add2counter","push","length","exacth","path","component","this","map","bind","to","exact","Form","React","Component","disabled","placeholder","handleInputChange","Menu","target","values","console","log","firstName","onSubmit","validate","render","Form1","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70825577.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactLogo2.0f6d8194.png\";","const data ={\r\n    Alumno:[\r\n        {\r\n        _id:1,\r\n        name: null,\r\n        year: null\r\n    }\r\n]\r\n}\r\nexport default data;","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\n\r\nconst counter = (props) => {\r\n    return(<ul className=\"boxCounter\">\r\n        <li>\r\n            Creado:{props.created}\r\n        </li>\r\n        <li>\r\n            Actualizado:{props.updated}\r\n        </li>\r\n        <li className=\"counterDirection\">\r\n            <button onClick={props.decrement} value={props.counter} className=\"buttonCounter\">-</button>\r\n            <div>{props.counter}</div>\r\n            <button onClick={props.increment} value={props.counter} className=\"buttonCounter\">+</button>\r\n            <button onClick={props.deleteCounter} className=\"buttonCounter\">ELIMINAR</button>\r\n        </li>\r\n    </ul>)\r\n}\r\nexport default counter;","import './style.css';\r\nimport React from 'react';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport Form from '../Form';\r\nimport Counter1 from '../Counter/counter1.js';\r\n\r\nclass Counter extends React.Component {\r\n \r\n  \r\nconstructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        counters: [{\r\n          id: 0,\r\n          created: Date(),\r\n          updated: 0,\r\n          counter: 0\r\n        },\r\n        {\r\n          id: 1,\r\n          created: Date(),\r\n          updated: 0,\r\n          counter: 0\r\n        }\r\n      ]\r\n      }\r\n    }\r\n\r\n    increment = (id, event) => {\r\n      const index = this.state.counters.findIndex((counter)=>{\r\n        return counter.id === id\r\n      });\r\n      const counter = Object.assign({}, this.state.counters[index]);\r\n      counter.counter ++;\r\n      counter.updated = Date();\r\n      const counters = Object.assign([], this.state.counters);\r\n      counters[index] = counter;\r\n      this.setState({counters:counters});\r\n      return;\r\n    }\r\n    decrement = (id, event) => {\r\n      const index = this.state.counters.findIndex((counter)=>{\r\n        return counter.id === id\r\n      });\r\n      const counter = Object.assign({}, this.state.counters[index]);\r\n      counter.counter --;\r\n      counter.updated = Date();\r\n      const counters = Object.assign([], this.state.counters);\r\n      counters[index] = counter;\r\n      this.setState({counters:counters});\r\n      return;\r\n    }\r\n    \r\n    deleteCounter = (id, event) => {\r\n      const counters = Object.assign([], this.state.counters);\r\n      counters.splice(id, 1);\r\n      this.setState({counters:counters});\r\n      return;\r\n    }\r\n\r\n    add2counter = (event) => {\r\n      const counters = Object.assign([], this.state.counters);\r\n      counters.push({\r\n        id: this.state.counters.length,\r\n        created: Date(),\r\n        updated: 0,\r\n        counter: 0\r\n      });\r\n      this.setState({counters:counters});\r\n      return;\r\n    }\r\n      \r\n    render(){\r\n      return(\r\n        <BrowserRouter>\r\n        <Route exacth path=\"/Counter\" component={Counter}>\r\n            <div className = \"counter\">\r\n            <button onClick={this.add2counter} className=\"buttonCounter\">NEW COUNTER</button>\r\n              <div className=\"counterBack\">\r\n                <ul>\r\n                  {\r\n                    this.state.counters.map((counter)=>{\r\n                      return(<Counter1 id ={counter.id}\r\n                        created={counter.created}\r\n                        updated={counter.updated}\r\n                        counter={counter.counter}\r\n                        increment={this.increment.bind(this, counter.id)}\r\n                        decrement={this.decrement.bind(this, counter.id)}\r\n                        deleteCounter={this.deleteCounter.bind(this, counter.id)}\r\n                      />)\r\n                    })\r\n                  }\r\n                </ul>\r\n                <Link to=\"/parcialI\" className=\"link\">\r\n                  <button className=\"buttonCounter\">GO BACK</button>\r\n                </Link>\r\n                </div>\r\n              </div>    \r\n        </Route>\r\n          <Route exact path=\"/parcialI\" component={Form}></Route>\r\n        \r\n        </BrowserRouter>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Counter;","import './style.css';\r\nimport React from 'react';\r\nimport { Field } from 'react-final-form';\r\nimport data from '../../data.js';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport Counter from '../Counter';\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <BrowserRouter>\r\n        <Route exact path=\"/parcialI\">\r\n          <form className=\"form\">\r\n                <h2>Alumno</h2>\r\n                <div>\r\n                  <Field className=\"inputField\" name=\"name\" component=\"input\" disabled=\"disable\" placeholder={data.Alumno[0].name} />\r\n                </div>\r\n                <div>\r\n                  <Field className=\"inputField\" name=\"year\" component=\"input\" disabled=\"disable\" placeholder={data.Alumno[0].year} />\r\n                </div>\r\n                <div >\r\n                  <Link className=\"link\" to=\"/editForm\">\r\n                    <button className=\"buttonS\">Editar Información</button>\r\n                  </Link>\r\n                  <Link className=\"link\" to=\"/Counter\">\r\n                    <button className=\"buttonS\">Agregar Contador</button>\r\n                  </Link>\r\n                </div>\r\n          </form>\r\n        </Route>\r\n        <Route exact path=\"/editForm\">\r\n          <form className=\"form\">\r\n                <h2>Alumno</h2>\r\n                <div>\r\n                  <Field className=\"inputField\" name=\"name\" component=\"input\" placeholder={data.Alumno[0].name} />\r\n                </div>\r\n                <div>\r\n                  <Field className=\"inputField\" name=\"year\" component=\"input\" placeholder={data.Alumno[0].year} />\r\n                </div>\r\n                <div >\r\n                  <Link className=\"link\" to=\"/parcialI\">\r\n                    <button className=\"buttonS\" onClick={props.handleInputChange} >Guardar Información</button>\r\n                  </Link>\r\n                  <Link className=\"link\" to=\"/Counter\">\r\n                    <button className=\"buttonS\">Agregar Contador</button>\r\n                  </Link>\r\n                </div>\r\n          </form>\r\n        </Route>\r\n        <Route exact path=\"/Counter\" component={Counter}></Route>\r\n        </BrowserRouter>\r\n          )\r\n};\r\nexport default Form;","import './style.css';\r\nimport React , { useState } from 'react';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport { Form } from 'react-final-form';\r\nimport Form1 from '../Form';\r\nimport data from '../../data'\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state= {\r\n      this:data.Alumno[0].name = 'ingrese nombre',\r\n      this:data.Alumno[0].year = 2020\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      this:data.Alumno[0].name = event.target(\"name\").value,\r\n      this:data.Alumno[0].name = event.target(\"year\").value\r\n    })\r\n  }\r\n\r\n  onSubmit(values) {\r\n    console.log('Submitting form', values);\r\n  }\r\n\r\n  validate(values) {\r\n    if (values && values.firstName && values.firstName.length < 3);\r\n    console.log('El nombre debe ser mayor a 3 caracteres');\r\n  }\r\n    render(){\r\n      return(\r\n        <BrowserRouter>\r\n          <Route exact path=\"/parcialI\" component={Menu}>\r\n          <div className=\"formContainer\">\r\n            <Form \r\n                onSubmit={this.onSubmit}\r\n                validate={this.validate}\r\n                render={Form1}\r\n              />   \r\n          </div>\r\n          </Route>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n  }\r\n  export default Menu;","import React from 'react';\nimport './App.css';\nimport Menu from '../components/screens/Menu';\nimport image from '../assets/Logo/reactLogo2.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"menu\">\n        <Menu />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}